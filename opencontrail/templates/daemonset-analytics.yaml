{{- if .Values.manifests.daemonset_analytics }}
{{- $envAll := . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: analytics-env
data:
  CONTROLLER_NODES: 10.0.2.15
  RABBITMQ_NODES: rabbitmq.openstack.svc.cluster.local
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: rabbitmq
  RABBITMQ_PASSWORD: password
  CONFIG_API_AUTH: keystone
  ANALYTICS_API_AAA_MODE: cloud-admin
  CONFIG_AUTHN_SERVER: keystone-api.openstack.svc.cluster.local
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: analytics-nodemgr-config
data:
  DOCKER_HOST: "unix://mnt/docker.sock"
  CONTROLLER_NODES: 10.0.2.15
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analytics
spec:
  template:
    metadata:
      labels:
{{ tuple $envAll "opencontrail" "analytics" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.analytics.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.analytics.node_selector_value }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-analytics-api
        image: "localhost:5000/contrail-analytics-api:4.0.2.0-35"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: analytics-env
      - name: contrail-analytics-collector
        image: "localhost:5000/contrail-analytics-collector:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-alarm-gen
        image: "localhost:5000/contrail-analytics-alarm-gen:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-query-engine
        image: "localhost:5000/contrail-analytics-query-engine:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-snmp-collector
        image: "localhost:5000/contrail-analytics-snmp-collector:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-topology
        image: "localhost:5000/contrail-analytics-topology:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-nodemgr
        image: "localhost:5000/contrail-analytics-nodemgr:4.0.2.0-35"
        imagePullPolicy: ""
        envFrom:
        - configMapRef:
            name: analytics-nodemgr-config
        securityContext:
          privileged: true
# todo: there is type Socket in new kubernetes, it is possible to use full
# path:
# hostPath:
#   path: /var/run/docker.sock and
#   type: Socket
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
{{- end }}
