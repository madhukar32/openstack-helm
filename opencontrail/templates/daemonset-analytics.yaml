{{- if .Values.manifests.daemonset_analytics }}
{{- $envAll := . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: analytics-env
data:
  CONTROLLER_NODES: {{ .Values.conf.controller_nodes }}
  RABBITMQ_NODES: rabbitmq.openstack.svc.cluster.local
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: rabbitmq
  RABBITMQ_PASSWORD: password
  CONFIG_API_AUTH: keystone
  ANALYTICS_API_AAA_MODE: cloud-admin
  CONFIG_AUTHN_SERVER: keystone-api.openstack.svc.cluster.local
  ADMIN_USER: admin
  ADMIN_TENANT: admin
  ADMIN_PASSWORD: password
  AUTH_URL_VERSION: v3
  AUTH_URL_TOKENS: /v3/auth/tokens
  DOCKER_HOST: "unix://mnt/docker.sock"
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analytics
spec:
  template:
    metadata:
      labels:
{{ tuple $envAll "opencontrail" "analytics" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.analytics.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.analytics.node_selector_value }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-analytics-api
        image: {{ .Values.images.tags.analytics_api | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: analytics-env
      - name: contrail-analytics-collector
        image: {{ .Values.images.tags.analytics_collector | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-alarm-gen
        image: {{ .Values.images.tags.analytics_alarm_gen | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-query-engine
        image: {{ .Values.images.tags.analytics_query_engine | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-snmp-collector
        image: {{ .Values.images.tags.analytics_snmp_collector | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-topology
        image: {{ .Values.images.tags.analytics_topology | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
      - name: contrail-analytics-nodemgr
        image: {{ .Values.images.tags.analytics_nodemgr | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: analytics-env
        securityContext:
          privileged: true
# todo: there is type Socket in new kubernetes, it is possible to use full
# path:
# hostPath:
#   path: /var/run/docker.sock and
#   type: Socket
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
{{- end }}
