{{- if .Values.manifests.daemonset_controller }}
{{- $envAll := . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-env
data:
  CONTROLLER_NODES: {{ .Values.conf.controller_nodes }}
  RABBITMQ_NODES: rabbitmq.openstack.svc.cluster.local
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: rabbitmq
  RABBITMQ_PASSWORD: password
  DOCKER_HOST: "unix://mnt/docker.sock"
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-config
spec:
  template:
    metadata:
      labels:
{{ tuple $envAll "opencontrail" "controller" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.controller.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.controller.node_selector_value }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-config-api
        image: {{ .Values.images.tags.config_api | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: config-env
        - configMapRef:
            name: configmap-auth
        - configMapRef:
            name: configmap-rabbitmq
      - name: contrail-devicemgr
        image: {{ .Values.images.tags.config_devicemgr | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: config-env
        - configMapRef:
            name: configmap-auth
        - configMapRef:
            name: configmap-rabbitmq
      - name: contrail-schema-transformer
        image: {{ .Values.images.tags.config_schema_transformer | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: config-env
        - configMapRef:
            name: configmap-auth
        - configMapRef:
            name: configmap-rabbitmq
      - name: contrail-svcmonitor
        image: {{ .Values.images.tags.config_svcmonitor | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: config-env
        - configMapRef:
            name: configmap-auth
        - configMapRef:
            name: configmap-rabbitmq
      - name: contrail-config-nodemgr
        image: {{ .Values.images.tags.nodemgr | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: config-env
        - configMapRef:
            name: configmap-auth
        env:
        - name: NODE_TYPE
          value: config
# todo: there is type Socket in new kubernetes, it is possible to use full
# path:
# hostPath:
#   path: /var/run/docker.sock and
#   type: Socket
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
{{- end }}
