{{- if .Values.manifests.daemonset_agent }}
{{- $envAll := . }}
{{- $cloud_orchestrator := .Values.conf.global_config.GLOBAL.cloud_orchestrator }}
# host_os is a mandatory field
{{- $_ := required ".Values.conf.host_os must be specified, valid values are ubuntu, centos" .Values.conf.host_os }}
{{- $host_os := .Values.conf.host_os }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vrouter-env
data:
  CONTROLLER_NODES: 10.0.2.15
  CONFIG_API_AUTH: keystone
  CONFIG_API_AAA_MODE: cloud-admin
  CONFIG_AUTHN_SERVER: keystone-api.openstack.svc.cluster.local
  ADMIN_USER: admin
  ADMIN_TENANT: admin
  ADMIN_PASSWORD: password
  AUTH_URL_VERSION: v3
  AUTH_URL_TOKENS: /v3/auth/tokens
  PHYSICAL_INTERFACE: eth0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vrouter-nodemgr-config
data:
  DOCKER_HOST: "unix://mnt/docker.sock"
  CONTROLLER_NODES: 10.0.2.15
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-agent
spec:
  template:
    metadata:
      labels:
{{ tuple $envAll "opencontrail" "vrouter-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      #Disable affinity for single node setup
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.agent.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.agent.node_selector_value }}
      #Enable tolerations for single node setup
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      automountServiceAccountToken: false
      hostNetwork: true
      initContainers:
{{- if eq $host_os "centos" }}
{{- $_ := required ".Values.images.tags.vrouter_compiler must be specified, if hostOS is centos" .Values.images.vrouter_compiler }}
      - name: contrail-vrouter-compiler
        image: {{ .Values.images.tags.vrouter_compiler | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /usr/src/kernels
          name: usr-src-kernels
        env:
        - name: INSTALL_VROUTER_MODULE
          value: 'true'
{{- end }}
{{- if eq $cloud_orchestrator "kubernetes" }}
      - name: contrail-kubernetes-agent
        image: {{ .Values.images.tags.kubernetes_agent | quote }}
        imagePullPolicy: {{ default "" .Values.images.imagePullPolicy | quote }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: tmp-contrail-config
          mountPath: /tmp/contrailctl/global.conf
          subPath: global.conf
        - name: tmp-contrail-config
          mountPath: /tmp/contrailctl/kubernetesagent.conf
          subPath: kubernetesagent.conf
        - name: contrail-varlib
          mountPath: /var/lib/contrail/
        - name: etc-cni
          mountPath: /host/etc_cni
        - name: opt-cni-bin
          mountPath: /host/opt_cni_bin
        - name: var-log-contrail-cni
          mountPath: /var/log/contrail/cni
{{- end }}
#{ {- if eq $cloud_orchestrator "openstack" }}
#      - name: register-vrouter-to-controller
#        image: {{ .Values.images.tags.register_vrouter | quote }}
#        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
#        command:
#        - /tmp/register-vrouter.sh
#        env:
#        - name: HOST_NAME
#          valueFrom:
#            fieldRef:
#              fieldPath: spec.nodeName
#        - name: HOST_IP
#          valueFrom:
#            fieldRef:
#              fieldPath: status.hostIP
#        volumeMounts:
#        - name: register-vrouter
#          mountPath: /tmp/register-vrouter.sh
#          subPath: register-vrouter.sh
#{ {- end }}
      containers:
      - name: contrail-agent
        image: "localhost:5000/contrail-agent-vrouter:4.0.2.0-35"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: vrouter-env
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /var/lib/contrail/
          name: var-lib-contrail
{{- if eq $cloud_orchestrator "kubernetes" }}
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        # This is a workaround just to make sure the directory is created on host
        - mountPath: /var/log/contrail/cni
          name: var-log-contrail-cni
        - mountPath: /tmp/serviceaccount
          name: pod-secret
{{- end }}
      - name: contrail-agent-nodemgr
        image: "localhost:5000/contrail-agent-nodemgr:4.0.2.0-35"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: vrouter-nodemgr-config
        securityContext:
          privileged: true
# todo: there is type Socket in new kubernetes, it is possible to use full
# path:
# hostPath:
#   path: /var/run/docker.sock and
#   type: Socket
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail/
{{- if eq $cloud_orchestrator "kubernetes" }}
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni
        hostPath:
          path: /etc/cni
      - name: var-log-contrail-cni
        hostPath:
          path: /var/log/contrail/cni/
{{- end }}
#{ {- if eq $cloud_orchestrator "openstack"}}
#      - name: register-vrouter
#        configMap:
#          name: vrouter-bin
#          defaultMode: 0555
#{ {- end }}
{{- if eq $host_os "centos" }}
      - name: usr-src-kernels
        hostPath:
          path: /usr/src/kernels
{{- end }}
{{- end }}
